{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Main Folder/Front End/React Course/React and Nextjs/React-practice/code/12-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport EventsPage from \"./components/EventsPage\";\nimport EventDetailPage from \"./components/EventDetailPage\";\nimport NewEventPage from \"./components/NewEventPage\";\nimport EditEventPage from \"./components/EditEventPage\";\nimport RootLayout from \"./components/Root\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: \"/events\",\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 35\n    }, this)\n  }, {\n    path: \"/events/:id\",\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 39\n    }, this)\n  }, {\n    path: \"/events/new\",\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 39\n    }, this)\n  }, {\n    path: \"/events/<some-id>/edit\",\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 50\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","RootLayout","jsxDEV","_jsxDEV","Fragment","_Fragment","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","App","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/Main Folder/Front End/React Course/React and Nextjs/React-practice/code/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport EventsPage from \"./components/EventsPage\";\nimport EventDetailPage from \"./components/EventDetailPage\";\nimport NewEventPage from \"./components/NewEventPage\";\nimport EditEventPage from \"./components/EditEventPage\";\nimport RootLayout from \"./components/Root\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n\n    children: [\n      { path: \"/\", element: <HomePage /> },\n      { path: \"/events\", element: <EventsPage /> },\n      { path: \"/events/:id\", element: <EventDetailPage /> },\n      { path: \"/events/new\", element: <NewEventPage /> },\n      { path: \"/events/<some-id>/edit\", element: <EditEventPage /> },\n    ],\n  },\n]);\nfunction App() {\n  return <></>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,QAAQ,kBAAkB;AACtD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,UAAU,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;EACEY,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEL,OAAA,CAACF,UAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEvBC,QAAQ,EAAE,CACR;IAAEN,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAEL,OAAA,CAACP,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACpC;IAAEL,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAEL,OAAA,CAACN,UAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC5C;IAAEL,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAEL,OAAA,CAACL,eAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACrD;IAAEL,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAEL,OAAA,CAACJ,YAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAClD;IAAEL,IAAI,EAAE,wBAAwB;IAAEC,OAAO,eAAEL,OAAA,CAACH,aAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC;AAElE,CAAC,CACF,CAAC;AACF,SAASE,GAAGA,CAAA,EAAG;EACb,oBAAOX,OAAA,CAAAE,SAAA,mBAAI,CAAC;AACd;AAACU,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}