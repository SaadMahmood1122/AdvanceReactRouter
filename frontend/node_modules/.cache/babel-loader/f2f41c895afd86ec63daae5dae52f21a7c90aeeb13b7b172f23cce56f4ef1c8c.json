{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Main Folder/Front End/React Course/React and Nextjs/React-practice/code/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n\n  // Handle the error condition if necessary\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  const events = data.events;\n  console.log(events);\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // Returning a custom error response\n    return new Response(JSON.stringify({\n      message: \"Could not fetch events.\"\n    }), {\n      status: 500,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  } else {\n    const events = await response.json();\n    console.log(events);\n    return events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","console","log","_c","loader","response","fetch","ok","Response","JSON","stringify","status","headers","json","$RefreshReg$"],"sources":["/Users/user/Desktop/Main Folder/Front End/React Course/React and Nextjs/React-practice/code/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  const data = useLoaderData();\n\n  // Handle the error condition if necessary\n  if (data.isError) {\n    return <p>{data.message}</p>;\n  }\n\n  const events = data.events;\n  console.log(events);\n\n  return <EventsList events={events} />;\n}\n\nexport default EventsPage;\n\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // Returning a custom error response\n    return new Response(\n      JSON.stringify({ message: \"Could not fetch events.\" }),\n      { status: 500, headers: { \"Content-Type\": \"application/json\" } }\n    );\n  } else {\n    const events = await response.json();\n    console.log(events);\n    return events;\n  }\n}\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;;EAE5B;EACA,IAAIM,IAAI,CAACC,OAAO,EAAE;IAChB,oBAAOJ,OAAA;MAAAK,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;EAEA,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAC1BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAEnB,oBAAOX,OAAA,CAACF,UAAU;IAACa,MAAM,EAAEA;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACR,EAAA,CAZQD,UAAU;EAAA,QACJJ,aAAa;AAAA;AAAAiB,EAAA,GADnBb,UAAU;AAcnB,eAAeA,UAAU;AAEzB,OAAO,eAAec,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,OAAO,IAAIC,QAAQ,CACjBC,IAAI,CAACC,SAAS,CAAC;MAAEf,OAAO,EAAE;IAA0B,CAAC,CAAC,EACtD;MAAEgB,MAAM,EAAE,GAAG;MAAEC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAAE,CACjE,CAAC;EACH,CAAC,MAAM;IACL,MAAMZ,MAAM,GAAG,MAAMK,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACpCZ,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,OAAOA,MAAM;EACf;AACF;AAAC,IAAAG,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}